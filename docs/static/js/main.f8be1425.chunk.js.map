{"version":3,"sources":["components/Tables.js","App.js","reportWebVitals.js","index.js"],"names":["Tables","props","tablename","id","align","table","map","tablecontent","num","mul","App","useState","setTable","display","setDisplay","tables","setTables","useEffect","currentRender","setTimeout","timeTables","upto","generate","i","push","className","type","min","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAuBeA,EAtBA,SAATA,OAAUC,GACZ,OAEI,gCACI,gDAAmBA,EAAMC,aACzB,uBAAOC,GAAG,aAAaC,MAAM,SAA7B,SAEQH,EAAMI,MAAMC,KAAI,SAACC,GAAD,OACZ,+BACI,6BAAKN,EAAMC,YACX,mCACA,6BAAKK,EAAaC,MAClB,mCACA,6BAAKD,EAAaE,kBCwB/BC,MAlCf,SAASA,UAAO,IAAD,EACaC,mBAAS,GADtB,mBACNN,EADM,KACCO,EADD,OAEiBD,mBAAS,GAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGeH,mBAAS,GAHxB,mBAGNI,EAHM,KAGEC,EAHF,KA0Bb,OAbAC,qBAAU,WACN,IAAIC,GAAgB,EAQpB,OAPAC,YAAW,WACND,IACDF,EAZW,SAAbI,WAAcf,GAElB,IAFwC,IAAfgB,EAAc,uDAAP,GAC5BC,EAAW,GACPC,EAAI,EAAGA,GAAKF,EAAME,IACxBD,EAASE,KAAK,CAAC,IAAOD,EAAG,IAAOA,EAAIlB,IAEtC,OAAOiB,EAOSF,CAAWf,IACrBS,EAAWT,MAEZ,KAEI,WACLa,GAAgB,KAEnB,CAACb,IAEF,sBAAKoB,UAAU,MAAf,UACE,uBAAOC,KAAK,SAASC,IAAI,IAAIxB,GAAG,QAAQyB,SAAU,kBAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOC,UAC9D,KAAZlB,GAAkB,cAAC,EAAD,CAAQX,UAAWW,EAASR,MAAOU,QCrB7CiB,EAZS,SAAlBA,gBAAkBC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8be1425.chunk.js","sourcesContent":["\nconst Tables = (props) => {\n    return (\n\n        <div>\n            <h1>Times Table - {props.tablename}</h1>\n            <table id=\"timestable\" align=\"center\">\n                {\n                    props.table.map((tablecontent) => (\n                        <tr>\n                            <td>{props.tablename}</td>\n                            <td>x</td>\n                            <td>{tablecontent.num}</td>\n                            <td>=</td>\n                            <td>{tablecontent.mul}</td>\n                        </tr>\n                    ))\n                }\n            </table>\n        </div>\n    )\n}\n\nexport default Tables;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Tables from './components/Tables';\n\nfunction App() {\n  const [table, setTable] = useState(0)\n  const [display, setDisplay] = useState(0);\n  const [tables, setTables] = useState(0);\n\n  const timeTables = (table, upto = 10) => {\n    let generate = []\n    for(let i = 1; i <= upto; i++) {\n      generate.push({'num': i, 'mul': i * table })\n    }\n    return generate;\n  }\n\n  useEffect(() => {\n      let currentRender = true;\n      setTimeout(() => {\n        if(currentRender) {\n          setTables(timeTables(table));\n          setDisplay(table);\n        }\n      }, 1000)\n      \n      return () => {\n        currentRender = false;\n      }\n  }, [table])\n  return (\n    <div className=\"App\">\n      <input type=\"number\" min=\"0\" id=\"table\" onChange={(e) => setTable(e.target.value)} />\n      {display !== \"\" && <Tables tablename={display} table={tables} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}