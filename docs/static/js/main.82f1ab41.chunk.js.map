{"version":3,"sources":["components/Tables.js","App.js","reportWebVitals.js","index.js"],"names":["Tables","props","tablename","table","id","align","map","tablecontent","num","mul","App","useState","setTable","display","setDisplay","undefined","tables","setTables","useEffect","currentRender","setTimeout","timeTables","upto","generate","i","push","className","type","min","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwBeA,EAvBA,SAATA,OAAUC,GAAW,IAChBC,EAAoBD,EAApBC,UAAWC,EAASF,EAATE,MAClB,OAEI,gCACI,gDAAmBD,KACnB,uBAAOE,GAAG,aAAaC,MAAM,SAA7B,SAEQF,EAAMG,KAAI,SAACC,GAAD,OACN,+BACI,6BAAKN,EAAMC,YACX,mCACA,6BAAKK,EAAaC,MAClB,mCACA,6BAAKD,EAAaE,kBCyB/BC,MApCf,SAASA,UAAO,IAAD,EACaC,qBADb,mBACNR,EADM,KACCS,EADD,OAEiBD,qBAFjB,mBAENE,EAFM,KAEGC,EAFH,OAGeH,wBAASI,GAHxB,mBAGNC,EAHM,KAGEC,EAHF,KA4Bb,OAfAC,qBAAU,WACN,IAAIC,GAAgB,EAUpB,OATAC,YAAW,WACND,IACY,KAAVhB,QAA0BY,IAAVZ,IACjBc,EAbS,SAAbI,WAAclB,GAElB,IAFwC,IAAfmB,EAAc,uDAAP,GAC5BC,EAAW,GACPC,EAAI,EAAGA,GAAKF,EAAME,IACxBD,EAASE,KAAK,CAAC,IAAOD,EAAG,IAAOA,EAAIrB,IAEtC,OAAOoB,EAQWF,CAAWlB,IACrBW,EAAWX,OAGd,KAEI,WACLgB,GAAgB,KAEnB,CAAChB,IAEF,sBAAKuB,UAAU,MAAf,yCAC8B,uBAAOC,KAAK,SAASC,IAAI,IAAIxB,GAAG,QAAQyB,SAAU,kBAACC,GAAD,OAAOlB,EAASkB,EAAEC,OAAOC,UACzF,KAAZnB,QAA8BE,IAAZF,QAAoCE,IAAXC,GAA0B,cAAC,EAAD,CAAQd,UAAWW,EAASV,MAAOa,QCvBjGiB,EAZS,SAAlBA,gBAAkBC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82f1ab41.chunk.js","sourcesContent":["\nconst Tables = (props) => {\n    const {tablename, table} = props;\n    return (\n\n        <div>\n            <h1>Times Table - {tablename}</h1>\n            <table id=\"timestable\" align=\"center\">\n                {\n                    table.map((tablecontent) => (\n                        <tr>\n                            <td>{props.tablename}</td>\n                            <td>x</td>\n                            <td>{tablecontent.num}</td>\n                            <td>=</td>\n                            <td>{tablecontent.mul}</td>\n                        </tr>\n                    ))\n                }\n            </table>\n        </div>\n    )\n}\n\nexport default Tables;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Tables from './components/Tables';\n\nfunction App() {\n  const [table, setTable] = useState()\n  const [display, setDisplay] = useState();\n  const [tables, setTables] = useState(undefined);\n\n  const timeTables = (table, upto = 10) => {\n    let generate = []\n    for(let i = 1; i <= upto; i++) {\n      generate.push({'num': i, 'mul': i * table })\n    }\n    return generate;\n  }\n\n  useEffect(() => {\n      let currentRender = true;\n      setTimeout(() => {\n        if(currentRender) {\n          if(table !== \"\" || table !== undefined) {\n            setTables(timeTables(table));\n            setDisplay(table);\n          }\n        }\n      }, 1000)\n      \n      return () => {\n        currentRender = false;\n      }\n  }, [table])\n  return (\n    <div className=\"App\">\n      Enter the Times Tables No : <input type=\"number\" min=\"0\" id=\"table\" onChange={(e) => setTable(e.target.value)} />\n      {(display !== \"\" && display !== undefined && tables !== undefined ) && <Tables tablename={display} table={tables} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}